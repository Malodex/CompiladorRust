KW_FN fn
IDENTIFIER main
PARENOPEN (
PARENCLOSE )
CURLYOPEN {
KW_LET let
IDENTIFIER pontos
EQ =
BRACKETOPEN [
INTEGER 1
COMMA ,
INTEGER 2
BRACKETCLOSE ]
SEMI ;
KW_LET let
IDENTIFIER resultado
EQ =
IDENTIFIER func
PARENOPEN (
IDENTIFIER pontos
COMMA ,
IDENTIFIER pontos
DOT .
IDENTIFIER len
PARENOPEN (
PARENCLOSE )
PARENCLOSE )
SEMI ;
KW_LET let
IDENTIFIER tamanho
EQ =
IDENTIFIER len
PARENOPEN (
PARENCLOSE )
SEMI ;
KW_LET let
IDENTIFIER temp
EQ =
PARENOPEN (
PARENOPEN (
IDENTIFIER y
STAR *
IDENTIFIER x
PARENCLOSE )
PERCENT %
INTEGER 123
PARENCLOSE )
SEMI ;
KW_IF if
IDENTIFIER n
EQEQ ==
INTEGER 0
CURLYOPEN {
KW_RETURN return
FLOAT 1.0
SEMI ;
CURLYCLOSE }
KW_ELSE else
KW_IF if
IDENTIFIER n
EQEQ ==
INTEGER 1
CURLYOPEN {
KW_RETURN return
FLOAT 1.01
PLUS +
PARENOPEN (
IDENTIFIER v
BRACKETOPEN [
INTEGER 0
BRACKETCLOSE ]
KW_AS as
IDENTIFIER f64
PARENCLOSE )
SLASH /
FLOAT 1e2
PLUS +
PARENOPEN (
IDENTIFIER v
BRACKETOPEN [
INTEGER 0
BRACKETCLOSE ]
KW_AS as
IDENTIFIER f64
PARENCLOSE )
SLASH /
FLOAT 0.001
SEMI ;
CURLYCLOSE }
KW_LET let
KW_MUT mut
IDENTIFIER res
EQ =
FLOAT 0.25e-13
SEMI ;
KW_FOR for
IDENTIFIER i
KW_IN in
PARENOPEN (
FLOAT 0.
DOT .
IDENTIFIER n
PARENCLOSE )
DOT .
IDENTIFIER rev
PARENOPEN (
PARENCLOSE )
CURLYOPEN {
KW_IF if
IDENTIFIER v
BRACKETOPEN [
IDENTIFIER i
BRACKETCLOSE ]
LE <=
INTEGER 0
CURLYOPEN {
KW_BREAK break
SEMI ;
CURLYCLOSE }
KW_LET let
IDENTIFIER temp
EQ =
PARENOPEN (
PARENOPEN (
IDENTIFIER v
BRACKETOPEN [
IDENTIFIER i
BRACKETCLOSE ]
STAR *
IDENTIFIER v
BRACKETOPEN [
IDENTIFIER i
BRACKETCLOSE ]
PARENCLOSE )
PERCENT %
INTEGER 123
PARENCLOSE )
KW_AS as
IDENTIFIER f64
SEMI ;
KW_IF if
IDENTIFIER temp
LT <
FLOAT 0.0
CURLYOPEN {
IDENTIFIER res
MINUSEQ -=
IDENTIFIER res
STAR *
FLOAT 2e-2
PLUS +
IDENTIFIER func
PARENOPEN (
IDENTIFIER v
COMMA ,
IDENTIFIER n
MINUS -
INTEGER 1
PARENCLOSE )
STAR *
IDENTIFIER temp
SEMI ;
CURLYCLOSE }
KW_ELSE else
CURLYOPEN {
IDENTIFIER res
PLUSEQ +=
IDENTIFIER res
STAR *
FLOAT 0.3e3
PLUS +
IDENTIFIER func
PARENOPEN (
IDENTIFIER v
COMMA ,
IDENTIFIER n
MINUS -
INTEGER 2
PARENCLOSE )
STAR *
IDENTIFIER temp
SEMI ;
IDENTIFIER println!
PARENOPEN (
STRING "Estranho, ne?"
PARENCLOSE )
SEMI ;
CURLYCLOSE }
CURLYCLOSE }
CURLYCLOSE }
